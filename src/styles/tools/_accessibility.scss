// Applies accessible hiding to the current element.
// @param  {Boolean} $important [true] - Whether the visibility is important.
// @output Properties for removing the element from the document flow.
@mixin u-accessibly-hidden($important: true) {
  $important: important($important);

  position: absolute $important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: 0;
  padding: 0;
  border: 0;
}

//
// Allows an accessibly hidden element to be focusable via keyboard navigation.
//
// @content For styling the now visible element.
// @output  Injects `:focus`, `:active` pseudo-classes.
//
@mixin u-accessibly-focusable {
  @include u-actus {

    @content;

    clip: auto;
    width: auto;
    height: auto;
  }
}


// Hide the current element from all.
// The element will be hidden from screen readers and removed from the document flow.
// @link   http://juicystudio.com/article/screen-readers-display-none.php
// @param  {Boolean} $important [true] - Whether the visibility is important.
// @output `display`, `visibility`
@mixin u-hidden($important: true) {
  $important: important($important);

  display: none   $important;
  visibility: hidden $important;
}

// Show the current element for all.
// The element will be accessible from screen readers and visible in the document flow.
// @param  {String}  $display   [block] - The rendering box used for the element.
// @param  {Boolean} $important [true]  - Whether the visibility is important.
// @output `display`, `visibility`
@mixin u-shown($display: block, $important: true) {
  $important: important($important);

  display: $display $important;
  visibility: visible  $important;
}